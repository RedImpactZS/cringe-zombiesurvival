local funcSignatures = gace.autocompletion.funcSignatures

-- Add some common names. These might not be 100% correct (because there is no parent_test) but good enough
funcSignatures["LocalPlayer"] = { ret = { t = "meta", name = "LocalPlayer" } }
funcSignatures["GetParent"] = { ret = { t = "_copyPrev" }}
funcSignatures["GetPos"] = { ret = { t = "meta", name = "Vector" }}
funcSignatures["EyePos"] = { ret = { t = "meta", name = "Vector" }}
funcSignatures["EyeAngles"] = { ret = { t = "meta", name = "Angle" }}

-- Add from some common libraries
funcSignatures["getUser"] = { parent_test = { t = "table", tbl = ULib }, ret = { t = "meta", name = "Player" }}

-- Signatures automatically parsed from GMod wiki

-- Code for parsing:
--[[
local primitives = {number = true, boolean = true, table = true}
local meta = "Player"
http.Fetch("https://wiki.garrysmod.com/api.php?action=query&list=categorymembers&cmtitle=Category:" .. meta .. "&cmlimit=1000&format=json", function(json)
	local t = util.JSONToTable(json)
	
	local members = {}
	for _,m in pairs(t.query.categorymembers) do
		table.insert(members, m.title)
	end
	
	local step = 15
	for i=1, #members, step do
		local sub = {}
		for j=i, i+step-1 do
			table.insert(sub, members[j])
		end
		local massFetchUrl = "https://wiki.garrysmod.com/api.php?action=query&prop=revisions&format=json&rvprop=content&titles=" .. table.concat(sub, "|")
		
		http.Fetch(massFetchUrl, function(json)
			for id,page in pairs(util.JSONToTable(json).query.pages) do
				local title = page.title
				if page.revisions then
					local rev = page.revisions[1]["*"]
					local returnType = rev:match("{{Ret.-type=(%S*)")
					if returnType then
						local ftitle = title:match("([^/]*)$")
						if primitives[returnType] then
							print(ftitle .. " = { parent_test = parent_test, ret = { t = \"object\", luatype = \"" .. returnType .. "\" } },")
						else
							print(ftitle .. " = { parent_test = parent_test, ret = { t = \"meta\", name = \"" .. returnType .. "\" } },")
						end
					end
				end
			end
		end)
	end
	
end)
]]

-- Vector methods
local parent_test = { t = "meta", name = "Vector" }
table.Merge(funcSignatures, {
	ToColor = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
	LengthSqr = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
	IsEqualTol = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
	WithinAABox = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
	ToScreen = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
	IsZero = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
	DotProduct = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
	Angle = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
	Length2D = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
	Distance = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
	DistToSqr = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
	AngleEx = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
	Cross = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
	GetNormal = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
	GetNormalized = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
	Length = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
	Dot = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
	Length2DSqr = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
})

local parent_test = { t = "meta", name = "Entity" }
table.Merge(funcSignatures, {
	BoneHasFlag = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
BodyTarget = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
AddGestureSequence = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
BecomeRagdollOnClient = { parent_test = parent_test, ret = { t = "meta", name = "CSEnt" } },
AddLayeredSequence = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
AlignAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
AddGesture = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
AddCallback = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
BoneLength = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
BoundingRadius = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
CreateParticleEffect = { parent_test = parent_test, ret = { t = "meta", name = "CNewParticleEffect" } },
CreatedByMap = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
FindTransitionSequence = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
FindBodygroupByName = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
EyePos = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
EyeAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
EntIndex = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetBoneController = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetAttachments = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetBodygroupName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetBodygroupCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetBodygroup = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetBodyGroups = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetBloodColor = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetBaseVelocity = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetAbsVelocity = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetAnimTime = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetAnimInfo = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetAttachment = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetConstrainedPhysObjects = { parent_test = parent_test, ret = { t = "meta", name = "PhysObj" } },
GetConstrainedEntities = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetBonePosition = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetBrushPlaneCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetColor = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetChildren = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetCollisionGroup = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetChildBones = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetCollisionBounds = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetClass = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetBoneName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetBoneCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetBoneMatrix = { parent_test = parent_test, ret = { t = "meta", name = "VMatrix" } },
GetBoneParent = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetBrushPlane = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetElasticity = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetEffects = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetDTAngle = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetDTEntity = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetDTString = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetDTVector = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetCreator = { parent_test = parent_test, ret = { t = "meta", name = "Player" } },
GetDTInt = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetDTFloat = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetCreationTime = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetCustomCollisionCheck = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetCreationID = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetCycle = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetEFlags = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetDTBool = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetGroundSpeedVelocity = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetHitBoxCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetHitBoxBounds = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetHitBoxBone = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFriction = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetGroundEntity = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetGravity = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFlexBounds = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFlexWeight = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFlexNum = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFlexName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetFlexScale = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFlags = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetForward = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetManipulateBoneScale = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetManipulateBonePosition = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetManipulateBoneJiggle = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetManipulateBoneAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetLocalPos = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetLayerDuration = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetLocalAngularVelocity = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetInternalVariable = { parent_test = parent_test, ret = { t = "meta", name = "any" } },
GetLocalAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetHitBoxGroupCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetLayerWeight = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetHitboxSetCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetHitboxSet = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetKeyValues = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetLayerCycle = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetMoveType = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetMoveParent = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetMoveCollide = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetMomentaryRotButtonPos = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetMaterialType = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetModelRadius = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetModelScale = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetModelRenderBounds = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetModelBounds = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetMaterials = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetMaxHealth = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetMaterial = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetModel = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetModelPhysBoneCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNetworkedVarProxy = { parent_test = parent_test, ret = { t = "meta", name = "function" } },
GetNumPoseParameters = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNumBodyGroups = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNoDraw = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetNetworkedVector = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetNetworkedVarTable = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetNetworkedFloat = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNetworkedInt = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNetworkedString = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetNetworkedAngle = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetNetworkOrigin = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetNetworkAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetNWAngle = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetNetworkedBool = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetNetworkedEntity = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetPhysicsObject = { parent_test = parent_test, ret = { t = "meta", name = "PhysObj" } },
GetPhysicsAttacker = { parent_test = parent_test, ret = { t = "meta", name = "Player" } },
GetPersistent = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetParentPhysNum = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetParentAttachment = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetParent = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetNWEntity = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetOwner = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetNWFloat = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNWInt = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNWVarTable = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetNWVarProxy = { parent_test = parent_test, ret = { t = "meta", name = "function" } },
GetNWVector = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetNWBool = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetNWString = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetRenderOrigin = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetRenderMode = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetRenderGroup = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetRenderFX = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetRenderBounds = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetRenderAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetRagdollOwner = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetPhysicsObjectCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetPlaybackRate = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetPos = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetPoseParameterRange = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetPoseParameter = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetPoseParameterName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetPredictable = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetPhysicsObjectNum = { parent_test = parent_test, ret = { t = "meta", name = "PhysObj" } },
GetRotatedAABB = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetShouldPlayPickupSound = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetSequenceName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetSequenceMoveYaw = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSequenceMoveDist = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSequenceList = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetSequenceInfo = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetShouldServerRagdoll = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetSequence = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSequenceGroundSpeed = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSaveTable = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetRight = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetSequenceActivityName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetSequenceCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSequenceActivity = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSolid = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetVelocity = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetTouchTrace = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetVar = { parent_test = parent_test, ret = { t = "meta", name = "any" } },
GetUp = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetSolidFlags = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetWorkshopID = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSubModels = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetSkin = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetTable = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetUnFreezable = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetSpawnFlags = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSpawnEffect = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetSubMaterial = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetTransmitWithParent = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsConstrained = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsConstraint = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsDormant = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
HasSpawnFlags = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
HasBoneManipulations = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
HasFlexManipulatior = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
HeadTarget = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
Health = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
IsValid = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsLagCompensated = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsOnGround = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsLineOfSightClear = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsRagdoll = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsPlayingGesture = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsFlagSet = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsPlayerHolding = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsPlayer = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsSolid = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsEffectActive = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsOnFire = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsInWorld = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsEFlagSet = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsNPC = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsValidLayer = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
LookupSequence = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
LookupBone = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
IsWidget = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsWeapon = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsWorld = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsVehicle = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
LookupAttachment = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
LocalToWorld = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
LocalToWorldAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
PassesFilter = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
PassesDamageFilter = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
OnGround = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
ObjectCaps = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
OBBMins = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
OBBMaxs = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
NearestPoint = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
MapCreationID = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
OBBCenter = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
SelectWeightedSequenceSeeded = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
SelectWeightedSequence = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
SequenceDuration = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
SnatchModelInstance = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
SkinCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
StartLoopingSound = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
ViewModelIndex = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
TestPVS = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
TranslatePhysBoneToBone = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
TranslateBoneToPhysBone = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
WaterLevel = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
VisibleVec = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
Visible = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
})

local parent_test = { t = "meta", name = "Player" }
table.Merge(funcSignatures, {
Frags = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
FlashlightIsOn = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
CanUseFlashlight = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
Armor = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
Deaths = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
CheckLimit = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
Crouching = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
AccountID = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
Alive = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetDrivingEntity = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetAllowWeaponsInVehicle = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetCurrentViewOffset = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetCurrentCommand = { parent_test = parent_test, ret = { t = "meta", name = "CUserCmd" } },
GetCrouchedWalkSpeed = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetClassID = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetCanZoom = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetAllowFullRotation = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetAvoidPlayers = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetActiveWeapon = { parent_test = parent_test, ret = { t = "meta", name = "Weapon" } },
GetAmmoCount = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetCanWalk = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetAimVector = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetLaggedMovementValue = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFriendStatus = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetJumpPower = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetInfoNum = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetInfo = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetHull = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetHands = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetHullDuck = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetEyeTraceNoCursor = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetDrivingMode = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetDuckSpeed = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetFOV = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetMaxSpeed = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetHoveredWidget = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetEyeTrace = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetRunSpeed = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetStepSize = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetShootPos = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetTimeoutSeconds = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetRenderAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetRagdollEntity = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetPunchAngle = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetNoCollideWithTeammates = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetObserverMode = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetObserverTarget = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetPData = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetPressedWidget = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetPlayerColor = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetPlayerInfo = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetUserGroup = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GiveAmmo = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
Give = { parent_test = parent_test, ret = { t = "meta", name = "Weapon" } },
GetWeapons = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetWeaponColor = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetWeapon = { parent_test = parent_test, ret = { t = "meta", name = "Weapon" } },
GetViewPunchAngles = { parent_test = parent_test, ret = { t = "meta", name = "Angle" } },
GetTool = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
GetWalkSpeed = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetVehicle = { parent_test = parent_test, ret = { t = "meta", name = "Vehicle" } },
GetViewModel = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetViewOffsetDucked = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
GetUnDuckSpeed = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetViewEntity = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
GetViewOffset = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
IsPlayingTaunt = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsMuted = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
HasGodMode = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsListenServerHost = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsFullyAuthenticated = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsFrozen = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsDrivingEntity = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsConnected = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
HasWeapon = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsBot = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsAdmin = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IPAddress = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
InVehicle = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
KeyReleased = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
KeyPressed = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
KeyDownLast = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
KeyDown = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsTimingOut = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsSpeaking = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsWorldClicking = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsSuperAdmin = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsSuitEquipped = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsTyping = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsUserGroup = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsVoiceAudible = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
Ping = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
MotionSensorPos = { parent_test = parent_test, ret = { t = "meta", name = "Vector" } },
PhysgunUnfreeze = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
PacketLoss = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
LastHitGroup = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
Name = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
Nick = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
RemovePData = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
SetPData = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
ShouldDrawLocalPlayer = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
SteamID = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
SteamID64 = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
VoiceVolume = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
UniqueID = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
Team = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
UserID = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
UniqueIDTable = { parent_test = parent_test, ret = { t = "object", luatype = "table" } },
TimeConnected = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
TraceHullAttack = { parent_test = parent_test, ret = { t = "meta", name = "Entity" } },
TranslateWeaponActivity = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
})

local parent_test = { t = "meta", name = "Weapon" }
table.Merge(funcSignatures, {
IsCarriedByLocalPlayer = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetSlot = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
HasAmmo = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
IsScripted = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetWeight = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
LastShootTime = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
IsWeaponVisible = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetWeaponViewModel = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetWeaponWorldModel = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
GetSlotPos = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
Clip2 = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
Clip1 = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetSecondaryAmmoType = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetMaxClip1 = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetPrintName = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
AllowsAutoSwitchTo = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetPrimaryAmmoType = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNextSecondaryFire = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetNextPrimaryFire = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetMaxClip2 = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
AllowsAutoSwitchFrom = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
DefaultReload = { parent_test = parent_test, ret = { t = "object", luatype = "boolean" } },
GetActivity = { parent_test = parent_test, ret = { t = "object", luatype = "number" } },
GetHoldType = { parent_test = parent_test, ret = { t = "meta", name = "string" } },
})
